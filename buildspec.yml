version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo Starting build phases...

  pre_build:
    commands:
      - echo Retrieving parameters from Parameter Store...
      - export AWS_REGION=$(aws ssm get-parameter --name /buet/hackathon/aws-region --with-decryption --output text --query "Parameter.Value")
      - export ECR_REPOSITORY_URL=$(aws ssm get-parameter --name /buet/hackathon/ecr-repo-url --with-decryption --output text --query "Parameter.Value")
      - export VERSION=$(aws ssm get-parameter --name /buet/hackathon/version --with-decryption --output text --query "Parameter.Value")
      - export K8S_CLUSTER_NAME=$(aws ssm get-parameter --name /buet/hackathon/k8s-cluster-name --with-decryption --output text --query "Parameter.Value")
      - export K8S_NAMESPACE=$(aws ssm get-parameter --name /buet/hackathon/k8s-namespace --with-decryption --output text --query "Parameter.Value")
      - export STUDENT_SERVICE_APPLICATION_SETTINGS=$(aws ssm get-parameter --name /buet/hackathon/student-service-application-settings s --with-decryption --output text --query "Parameter.Value")
      - export STUDENT_SERVICE_DB_SETTINGS=$(aws ssm get-parameter --name /buet/hackathon/student-service-db-settings --with-decryption --output text --query "Parameter.Value")
      - export COURSE_SERVICE_APPLICATION_SETTINGS=$(aws ssm get-parameter --name /buet/hackathon/course-service-application-settings --with-decryption --output text --query "Parameter.Value")
      - export COURSE_SERVICE_DB_SETTINGS=$(aws ssm get-parameter --name /buet/hackathon/course-service-db-settings --with-decryption --output text --query "Parameter.Value")
 
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URL

  build:
    commands:
      - echo Building Docker image for Course Service...
      - docker build -t $ECR_REPOSITORY_URL/student:$VERSION -f student/Dockerfile student
      - docker push $ECR_REPOSITORY_URL/student:$VERSION
      
      - echo Building Docker image for Student Service...
      - docker build -t $ECR_REPOSITORY_URL/course:$VERSION -f course/Dockerfile course
      - docker push $ECR_REPOSITORY_URL/course:$VERSION

  post_build:
    commands:
      - echo All services have been built and pushed to ECR.
      - mkdir tmp
      
      - echo Getting application settings in tmp directory...
      - aws ssm get-parameter --name $COURSE_APPLICATION_SETTINGS --with-decryption --output text --query "Parameter.Value" --region $AWS_REGION > ./tmp/course.env
      - aws ssm get-parameter --name $STUDENT_APPLICATION_SETTINGS --with-decryption --output text --query "Parameter.Value" --region $AWS_REGION > ./tmp/student.env

      - echo Getting database settings in tmp directory...
      - aws ssm get-parameter --name $COURSE_DB_SETTINGS --with-decryption --output text --query "Parameter.Value" --region $AWS_REGION > ./tmp/course.json
      - aws ssm get-parameter --name $STUDENT_DB_SETTINGS --with-decryption --output text --query "Parameter.Value" --region $AWS_REGION > ./tmp/student.json

      - echo Creating K8s Namespace...
      - kubectl create namespace $K8S_CLUSTER_NAME
      
      - echo Creating EKS credential...
      - aws eks --region $AWS_REGION update-kubeconfig --name $K8S_CLUSTER_NAME

      - echo Removing old secrets...
      - kubectl -n $K8S_NAMESPACE delete secret course-db-settings course-app-settings --ignore-not-found
      - kubectl -n $K8S_NAMESPACE delete secret student-db-settings student-app-settings --ignore-not-found

      - echo Creating application secret in Kubernetes...
      - kubectl -n $K8S_NAMESPACE create secret generic course-app-settings --from-env-file=./tmp/course.env
      - kubectl -n $K8S_NAMESPACE create secret generic student-app-settings --from-env-file=./tmp/student.env

      - echo Creating DB secret in Kubernetes...
      - kubectl -n $K8S_NAMESPACE create secret generic course-db-settings --from-file=./tmp/course.json
      - kubectl -n $K8S_NAMESPACE create secret generic student-db-settings --from-file=./tmp/student.json