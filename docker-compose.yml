version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    image: frontend
    ports:
      - '4200:80'
    stdin_open: true
    tty: true

  course:
    build: 
      context: ./course
    container_name: course
    image: course
    ports:
      - '8080:8080'
    depends_on:
      - course_db
  
  registration:
    build: 
      context: ./registration
    container_name: registration
    image: registration
    ports:
      - '8000:8000'
    depends_on:
      - student_db

  student_db:
    image: postgres:latest
    container_name: student_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: student_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: passwd
    volumes:
      - student_data:/var/lib/postgresql/data

  course_db:
    image: postgres:latest
    container_name: course_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: course_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: passwd
    volumes:
      - course_data:/var/lib/postgresql/data

volumes:
  student_data:
  course_data:
